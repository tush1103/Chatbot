{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tripatjot Singh\\\\Desktop\\\\Chatbot\\\\Chatbot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport image from \"./img/bot_image.jpg\";\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const humanMessage = useRef();\n  const botmessage = useRef();\n  const input = useRef();\n  let msg = \"\";\n  const date = new Date();\n  const hours = date.getHours();\n  const seconds = date.getSeconds();\n  const day = date.getDay();\n  const month = date.getMonth();\n  const year = date.getFullYear();\n  const [chats, setChats] = useState([{}]);\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const [time, setTime] = useState(`${hours}:${seconds}`); //using the useState hook to get the data from the local time and set it to the time variable\n  const [dateTime, setDateTime] = useState(`${days[day]}, ${months[month]} ${year}`); //using the useState hook to get the data from the local date and set it to the dateTime variable\n\n  const checkStatus = e => {\n    let isActive = true;\n    if (dateTime === \"Thursday, Aug 13 2022\") {\n      //if the dateTime is Thursday, 13 Aug 2022, the bot will be inactive\n      isActive = false;\n    }\n    const status = document.querySelector(\".status\");\n    // selecting the status class\n    if (isActive === true) {\n      //if the bot is active\n      status.innerHTML = \"Active\";\n      status.style.color = \"green\";\n    } else {\n      status.innerHTML = \"Not Active\";\n      status.style.color = \"red\";\n    }\n  };\n  const handleInput = () => {\n    const botMessage = document.querySelector(\"#message1\");\n    const userMessage = document.querySelector(\"#message2\");\n    const inputRef = input.current;\n    const getHumanMessage = humanMessage.current;\n    const getBotMessage = botmessage.current;\n    let badwords = [\"fuck|bad|stupid|useless|bitch|crazy|nonsense\"];\n    let words = new RegExp(badwords);\n    if (words.test(document.querySelector(\"#input\").value)) {\n      // if the input contains bad words\n      setChats(prevChats => {\n        msg = document.querySelector(\"#input\").value;\n        return [...prevChats, {\n          message: msg\n        }];\n      });\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Please do not use bad words\"; // display the message\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let welcome = [\"hi|hello|Hello|hey|sup|yo|wassup|whats up|howdy|greetings|good morning|good afternoon|good evening\"];\n    let words2 = new RegExp(welcome);\n    if (words2.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\");\n      // if the input contains welcome words\n      setChats(prevChats => {\n        msg = document.querySelector(\"#input\").value;\n        return [...prevChats, {\n          message: msg\n        }];\n      });\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Hello There how are you doing today?\"; // display the message\n        status.innerText = \"Active\";\n        status.style.color = \"green\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let bye = [\"bye|Bye|goodbye|see you later|cya|goodnight|goodbye\"];\n    let words3 = new RegExp(bye);\n    if (words3.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\");\n      setChats(prevChats => {\n        msg = document.querySelector(\"#input\").value;\n        return [...prevChats, {\n          message: msg\n        }];\n      });\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Bye, have a nice day\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n      setTimeout(() => {\n        status.innerText = \"Not active\";\n        status.style.color = \"red\";\n      }, 5000);\n    }\n    let thanks = [\"Thanks|thanks|thank you|thank you very much|Thank you very much\"];\n    let words4 = new RegExp(thanks);\n    if (words4.test(document.querySelector(\"#input\").value)) {\n      setChats(prevChats => {\n        msg = document.querySelector(\"#input\").value;\n        return [...prevChats, {\n          message: msg\n        }];\n      });\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"You are welcome\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let how = [\"How are you|how are you doing|how are you doing today|how are you doing today|How are you|how are you\"];\n    let words5 = new RegExp(how);\n    if (words5.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\");\n      setChats(prevChats => {\n        msg = document.querySelector(\"#input\").value;\n        return [...prevChats, {\n          message: msg\n        }];\n      });\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"I am fine, thank you\";\n        status.innerText = \"Active\";\n        status.style.color = \"green\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let good = [\"That's good|Sound nice|that sounds awesome|that sounds great|Great|great|sounds great|that's sounds good|Nice|nice\"];\n    let words6 = new RegExp(good);\n    if (words6.test(document.querySelector(\"#input\").value)) {\n      setChats(prevChats => {\n        msg = document.querySelector(\"#input\").value;\n        return [...prevChats, {\n          message: msg\n        }];\n      });\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"hehe\";\n        inputRef.value = \"\"; // clear the input\n      }, 1000);\n    }\n    let response = [\"I'm fine|I am fine|I am fine today|I am fine today|i'm fine|i'm great|I'm fine|I'm great|I'm good|i'm good|great|Great\"];\n    let words7 = new RegExp(response);\n    if (words7.test(document.querySelector(\"#input\").value)) {\n      setChats(prevChats => {\n        msg = document.querySelector(\"#input\").value;\n        return [...prevChats, {\n          message: msg\n        }];\n      });\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"That is good\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let nameAsk = [\"What's your name|what's your name|What is your name|what is your name\"];\n    let words8 = new RegExp(nameAsk);\n    if (words8.test(document.querySelector(\"#input\").value)) {\n      setChats(prevChats => {\n        msg = document.querySelector(\"#input\").value;\n        return [...prevChats, {\n          message: msg\n        }];\n      });\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"My name is Bot\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let owner = [\"Who is the owner|who is the owner|Who is the owner of this bot|who is the owner of this bot|Who made you|who made you|Who is your maker|Who made you|who is your maker|who is your owner|Who is your owner\"];\n    let words9 = new RegExp(owner);\n    if (words9.test(document.querySelector(\"#input\").value)) {\n      setChats(prevChats => {\n        msg = document.querySelector(\"#input\").value;\n        return [...prevChats, {\n          message: msg\n        }];\n      });\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"The owner of this bot is Tush\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let owner2 = [\"Who's Tush|who's Tush|Who is Tush|who is Tush\"];\n    let words10 = new RegExp(owner2);\n    if (words10.test(document.querySelector(\"#input\").value)) {\n      setChats(prevChats => {\n        msg = document.querySelector(\"#input\").value;\n        return [...prevChats, {\n          message: msg\n        }];\n      });\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Tush is a programmer based on ReactJS and NodeJS.Tush is Momo.\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let ageAsk = [\"What's your age|what's your age|What is your age|what is your age|How old are you|how old are you\"]; //adding the age-question\n    let words11 = new RegExp(ageAsk);\n    if (words11.test(document.querySelector(\"#input\").value)) {\n      setChats(prevChats => {\n        msg = document.querySelector(\"#input\").value;\n        return [...prevChats, {\n          message: msg\n        }];\n      });\n      // if the input contains some question\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"I am 1 year old\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    console.log(Object.values(chats));\n    // getHumanMessage.innerText = inputRef.value; // display the message\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    onLoad: checkStatus,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name\",\n              children: \"ChatBot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main_content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bot-message\",\n                id: \"message1\",\n                ref: botmessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"human-message\",\n                id: \"message2\",\n                ref: humanMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"input\",\n                placeholder: \"Enter your message\",\n                ref: input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleInput,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-paper-plane\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, this), \"Send\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"d2aVZaXgIyRBrssK5kxwN5cprEc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["image","useState","useRef","jsxDEV","_jsxDEV","App","_s","humanMessage","botmessage","input","msg","date","Date","hours","getHours","seconds","getSeconds","day","getDay","month","getMonth","year","getFullYear","chats","setChats","days","months","time","setTime","dateTime","setDateTime","checkStatus","e","isActive","status","document","querySelector","innerHTML","style","color","handleInput","botMessage","userMessage","inputRef","current","getHumanMessage","getBotMessage","badwords","words","RegExp","test","value","prevChats","message","innerText","setTimeout","welcome","words2","bye","words3","thanks","words4","how","words5","good","words6","response","words7","nameAsk","words8","owner","words9","owner2","words10","ageAsk","words11","console","log","Object","values","className","onLoad","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tripatjot Singh/Desktop/Chatbot/Chatbot/src/App.js"],"sourcesContent":["import \"./App.css\";\r\nimport image from \"./img/bot_image.jpg\";\r\nimport { useState, useRef } from \"react\";\r\n\r\nfunction App() {\r\n  const humanMessage = useRef();\r\n  const botmessage = useRef();\r\n  const input = useRef();\r\n  let msg=\"\";\r\n  const date = new Date();\r\n  const hours = date.getHours();\r\n  const seconds = date.getSeconds();\r\n  const day = date.getDay();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n  const [chats,setChats]=useState([{}])\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const [time, setTime] = useState(`${hours}:${seconds}`); //using the useState hook to get the data from the local time and set it to the time variable\r\n  const [dateTime, setDateTime] = useState(\r\n    `${days[day]}, ${months[month]} ${year}`\r\n  ); //using the useState hook to get the data from the local date and set it to the dateTime variable\r\n\r\n  const checkStatus = (e) => {\r\n    let isActive = true;\r\n    if (dateTime === \"Thursday, Aug 13 2022\") {\r\n      //if the dateTime is Thursday, 13 Aug 2022, the bot will be inactive\r\n      isActive = false;\r\n    }\r\n    const status = document.querySelector(\".status\");\r\n    // selecting the status class\r\n    if (isActive === true) {\r\n      //if the bot is active\r\n      status.innerHTML = \"Active\";\r\n      status.style.color = \"green\";\r\n    } else {\r\n      status.innerHTML = \"Not Active\";\r\n      status.style.color = \"red\";\r\n    }\r\n  };\r\n  const handleInput = () => {\r\n    const botMessage = document.querySelector(\"#message1\");\r\n    const userMessage = document.querySelector(\"#message2\");\r\n    const inputRef = input.current;\r\n    const getHumanMessage = humanMessage.current;\r\n    const getBotMessage = botmessage.current;\r\n\r\n    let badwords = [\"fuck|bad|stupid|useless|bitch|crazy|nonsense\"];\r\n    let words = new RegExp(badwords);\r\n    if (words.test(document.querySelector(\"#input\").value)) {\r\n      // if the input contains bad words\r\n      setChats((prevChats)=>{\r\n        msg=document.querySelector(\"#input\").value;\r\n        return [...prevChats,{message:msg}]\r\n      })\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"Please do not use bad words\"; // display the message\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n    let welcome = [\r\n      \"hi|hello|Hello|hey|sup|yo|wassup|whats up|howdy|greetings|good morning|good afternoon|good evening\",\r\n    ];\r\n    let words2 = new RegExp(welcome);\r\n    if (words2.test(document.querySelector(\"#input\").value)) {\r\n      const status = document.querySelector(\".status\");\r\n      // if the input contains welcome words\r\n      setChats((prevChats)=>{\r\n        msg=document.querySelector(\"#input\").value;\r\n        return [...prevChats,{message:msg}]\r\n      })\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"Hello There how are you doing today?\"; // display the message\r\n        status.innerText = \"Active\";\r\n        status.style.color = \"green\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n    let bye = [\"bye|Bye|goodbye|see you later|cya|goodnight|goodbye\"];\r\n    let words3 = new RegExp(bye);\r\n    if (words3.test(document.querySelector(\"#input\").value)) {\r\n      const status = document.querySelector(\".status\");\r\n      setChats((prevChats)=>{\r\n        msg=document.querySelector(\"#input\").value;\r\n        return [...prevChats,{message:msg}]\r\n      })\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"Bye, have a nice day\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n      setTimeout(() => {\r\n        status.innerText = \"Not active\";\r\n        status.style.color = \"red\";\r\n      }, 5000);\r\n    }\r\n    let thanks = [\r\n      \"Thanks|thanks|thank you|thank you very much|Thank you very much\",\r\n    ];\r\n    let words4 = new RegExp(thanks);\r\n    if (words4.test(document.querySelector(\"#input\").value)) {\r\n      setChats((prevChats)=>{\r\n        msg=document.querySelector(\"#input\").value;\r\n        return [...prevChats,{message:msg}]\r\n      })\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"You are welcome\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n    let how = [\r\n      \"How are you|how are you doing|how are you doing today|how are you doing today|How are you|how are you\",\r\n    ];\r\n    let words5 = new RegExp(how);\r\n    if (words5.test(document.querySelector(\"#input\").value)) {\r\n      const status = document.querySelector(\".status\");\r\n      setChats((prevChats)=>{\r\n        msg=document.querySelector(\"#input\").value;\r\n        return [...prevChats,{message:msg}]\r\n      })\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"I am fine, thank you\";\r\n        status.innerText = \"Active\";\r\n        status.style.color = \"green\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n    let good = [\r\n      \"That's good|Sound nice|that sounds awesome|that sounds great|Great|great|sounds great|that's sounds good|Nice|nice\",\r\n    ];\r\n    let words6 = new RegExp(good);\r\n    if (words6.test(document.querySelector(\"#input\").value)) {\r\n      setChats((prevChats)=>{\r\n        msg=document.querySelector(\"#input\").value;\r\n        return [...prevChats,{message:msg}]\r\n      })\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"hehe\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 1000);\r\n    }\r\n\r\n    let response = [\r\n      \"I'm fine|I am fine|I am fine today|I am fine today|i'm fine|i'm great|I'm fine|I'm great|I'm good|i'm good|great|Great\",\r\n    ];\r\n    let words7 = new RegExp(response);\r\n    if (words7.test(document.querySelector(\"#input\").value)) {\r\n      setChats((prevChats)=>{\r\n        msg=document.querySelector(\"#input\").value;\r\n        return [...prevChats,{message:msg}]\r\n      })\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"That is good\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n\r\n    let nameAsk = [\r\n      \"What's your name|what's your name|What is your name|what is your name\",\r\n    ];\r\n    let words8 = new RegExp(nameAsk);\r\n    if (words8.test(document.querySelector(\"#input\").value)) {\r\n      setChats((prevChats)=>{\r\n        msg=document.querySelector(\"#input\").value;\r\n        return [...prevChats,{message:msg}]\r\n      })\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"My name is Bot\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n\r\n    let owner = [\r\n      \"Who is the owner|who is the owner|Who is the owner of this bot|who is the owner of this bot|Who made you|who made you|Who is your maker|Who made you|who is your maker|who is your owner|Who is your owner\",\r\n    ];\r\n    let words9 = new RegExp(owner);\r\n    if (words9.test(document.querySelector(\"#input\").value)) {\r\n      setChats((prevChats)=>{\r\n        msg=document.querySelector(\"#input\").value;\r\n        return [...prevChats,{message:msg}]\r\n      })\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"The owner of this bot is Tush\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n\r\n    let owner2 = [\r\n      \"Who's Tush|who's Tush|Who is Tush|who is Tush\",\r\n    ];\r\n    let words10 = new RegExp(owner2);\r\n    if (words10.test(document.querySelector(\"#input\").value)) {\r\n      setChats((prevChats)=>{\r\n        msg=document.querySelector(\"#input\").value;\r\n        return [...prevChats,{message:msg}]\r\n      })\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText =\r\n          \"Tush is a programmer based on ReactJS and NodeJS.Tush is Momo.\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n\r\n    let ageAsk = [\r\n      \"What's your age|what's your age|What is your age|what is your age|How old are you|how old are you\",\r\n    ]; //adding the age-question\r\n    let words11 = new RegExp(ageAsk);\r\n    if (words11.test(document.querySelector(\"#input\").value)) {\r\n      setChats((prevChats)=>{\r\n        msg=document.querySelector(\"#input\").value;\r\n        return [...prevChats,{message:msg}]\r\n      })\r\n      // if the input contains some question\r\n      getBotMessage.innerText = \"Typing...\";\r\n      setTimeout(() => {\r\n        getBotMessage.innerText = \"I am 1 year old\";\r\n        inputRef.value = \"\"; // clear the input\r\n      }, 2000);\r\n    }\r\n    console.log(Object.values(chats));\r\n    // getHumanMessage.innerText = inputRef.value; // display the message\r\n  };\r\n  return (\r\n    <div className=\"App\" onLoad={checkStatus}>\r\n      <div className=\"wrapper\">\r\n        <div className=\"content\">\r\n          <div className=\"header\">\r\n            <div className=\"img\">\r\n              <img src={image} alt=\"\" />\r\n            </div>\r\n            <div className=\"right\">\r\n              <div className=\"name\">ChatBot</div>\r\n              <div className=\"status\">Active</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"main\">\r\n            <div className=\"main_content\">\r\n              <div className=\"messages\">\r\n                <div\r\n                  className=\"bot-message\"\r\n                  id=\"message1\"\r\n                  ref={botmessage}\r\n                ></div>\r\n                <div\r\n                  className=\"human-message\"\r\n                  id=\"message2\"\r\n                  ref={humanMessage}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bottom\">\r\n            <div className=\"btm\">\r\n              <div className=\"input\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"input\"\r\n                  placeholder=\"Enter your message\"\r\n                  ref={input}\r\n                />\r\n              </div>\r\n              <div className=\"btn\">\r\n                <button onClick={handleInput}>\r\n                  <i className=\"fas fa-paper-plane\"></i>Send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}