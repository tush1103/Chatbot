{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tripatjot Singh\\\\Desktop\\\\Chatbot\\\\Chatbot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport image from \"./img/bot_image.jpg\";\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n// function App() {\n//   const humanMessage = useRef();\n//   const botmessage = useRef();\n//   const input = useRef();\n//   let msg=\"\";\n//   const date = new Date();\n//   const hours = date.getHours();\n//   const seconds = date.getSeconds();\n//   const day = date.getDay();\n//   const month = date.getMonth();\n//   const year = date.getFullYear();\n//   const [chats,setChats]=useState([{}])\n//   const days = [\n//     \"Sunday\",\n//     \"Monday\",\n//     \"Tuesday\",\n//     \"Wednesday\",\n//     \"Thursday\",\n//     \"Friday\",\n//     \"Saturday\",\n//   ];\n//   const months = [\n//     \"January\",\n//     \"February\",\n//     \"March\",\n//     \"April\",\n//     \"May\",\n//     \"June\",\n//     \"July\",\n//     \"August\",\n//     \"September\",\n//     \"October\",\n//     \"November\",\n//     \"December\",\n//   ];\n//   const [time, setTime] = useState(`${hours}:${seconds}`); //using the useState hook to get the data from the local time and set it to the time variable\n// const [dateTime, setDateTime] = useState(\n//   `${days[day]}, ${months[month]} ${year}`\n// ); //using the useState hook to get the data from the local date and set it to the dateTime variable\n\n// const checkStatus = (e) => {\n//   let isActive = true;\n//   if (dateTime === \"Thursday, Aug 13 2022\") {\n//     //if the dateTime is Thursday, 13 Aug 2022, the bot will be inactive\n//     isActive = false;\n//   }\n//   const status = document.querySelector(\".status\");\n//   // selecting the status class\n//   if (isActive === true) {\n//     //if the bot is active\n//     status.innerHTML = \"Active\";\n//     status.style.color = \"green\";\n//   } else {\n//     status.innerHTML = \"Not Active\";\n//     status.style.color = \"red\";\n//   }\n// };\n\n//   const handleInput = () => {\n//     const botMessage = document.querySelector(\"#message1\");\n//     const userMessage = document.querySelector(\"#message2\");\n//     const inputRef = input.current;\n//     const getHumanMessage = humanMessage.current;\n//     const getBotMessage = botmessage.current;\n\n//     let badwords = [\"fuck|bad|stupid|useless|bitch|crazy|nonsense\"];\n//     let words = new RegExp(badwords);\n//     if (words.test(document.querySelector(\"#input\").value)) {\n//       // if the input contains bad words\n//       setChats((prevChats)=>{\n//         msg=document.querySelector(\"#input\").value;\n//         return [...prevChats,{message:msg}]\n//       })\n//       getBotMessage.innerText = \"Typing...\";\n//       setTimeout(() => {\n//         getBotMessage.innerText = \"Please do not use bad words\"; // display the message\n//         inputRef.value = \"\"; // clear the input\n//       }, 2000);\n//     }\n//     let welcome = [\n//       \"hi|hello|Hello|hey|sup|yo|wassup|whats up|howdy|greetings|good morning|good afternoon|good evening\",\n//     ];\n//     let words2 = new RegExp(welcome);\n//     if (words2.test(document.querySelector(\"#input\").value)) {\n//       const status = document.querySelector(\".status\");\n//       // if the input contains welcome words\n//       setChats((prevChats)=>{\n//         msg=document.querySelector(\"#input\").value;\n//         return [...prevChats,{message:msg}]\n//       })\n//       getBotMessage.innerText = \"Typing...\";\n//       setTimeout(() => {\n//         getBotMessage.innerText = \"Hello There how are you doing today?\"; // display the message\n//         status.innerText = \"Active\";\n//         status.style.color = \"green\";\n//         inputRef.value = \"\"; // clear the input\n//       }, 2000);\n//     }\n//     let bye = [\"bye|Bye|goodbye|see you later|cya|goodnight|goodbye\"];\n//     let words3 = new RegExp(bye);\n//     if (words3.test(document.querySelector(\"#input\").value)) {\n//       const status = document.querySelector(\".status\");\n//       setChats((prevChats)=>{\n//         msg=document.querySelector(\"#input\").value;\n//         return [...prevChats,{message:msg}]\n//       })\n//       getBotMessage.innerText = \"Typing...\";\n//       setTimeout(() => {\n//         getBotMessage.innerText = \"Bye, have a nice day\";\n//         inputRef.value = \"\"; // clear the input\n//       }, 2000);\n//       setTimeout(() => {\n//         status.innerText = \"Not active\";\n//         status.style.color = \"red\";\n//       }, 5000);\n//     }\n//     let thanks = [\n//       \"Thanks|thanks|thank you|thank you very much|Thank you very much\",\n//     ];\n//     let words4 = new RegExp(thanks);\n//     if (words4.test(document.querySelector(\"#input\").value)) {\n//       setChats((prevChats)=>{\n//         msg=document.querySelector(\"#input\").value;\n//         return [...prevChats,{message:msg}]\n//       })\n//       getBotMessage.innerText = \"Typing...\";\n//       setTimeout(() => {\n//         getBotMessage.innerText = \"You are welcome\";\n//         inputRef.value = \"\"; // clear the input\n//       }, 2000);\n//     }\n//     let how = [\n//       \"How are you|how are you doing|how are you doing today|how are you doing today|How are you|how are you\",\n//     ];\n//     let words5 = new RegExp(how);\n//     if (words5.test(document.querySelector(\"#input\").value)) {\n//       const status = document.querySelector(\".status\");\n//       setChats((prevChats)=>{\n//         msg=document.querySelector(\"#input\").value;\n//         return [...prevChats,{message:msg}]\n//       })\n//       getBotMessage.innerText = \"Typing...\";\n//       setTimeout(() => {\n//         getBotMessage.innerText = \"I am fine, thank you\";\n//         status.innerText = \"Active\";\n//         status.style.color = \"green\";\n//         inputRef.value = \"\"; // clear the input\n//       }, 2000);\n//     }\n//     let good = [\n//       \"That's good|Sound nice|that sounds awesome|that sounds great|Great|great|sounds great|that's sounds good|Nice|nice\",\n//     ];\n//     let words6 = new RegExp(good);\n//     if (words6.test(document.querySelector(\"#input\").value)) {\n//       setChats((prevChats)=>{\n//         msg=document.querySelector(\"#input\").value;\n//         return [...prevChats,{message:msg}]\n//       })\n//       getBotMessage.innerText = \"Typing...\";\n//       setTimeout(() => {\n//         getBotMessage.innerText = \"hehe\";\n//         inputRef.value = \"\"; // clear the input\n//       }, 1000);\n//     }\n\n//     let response = [\n//       \"I'm fine|I am fine|I am fine today|I am fine today|i'm fine|i'm great|I'm fine|I'm great|I'm good|i'm good|great|Great\",\n//     ];\n//     let words7 = new RegExp(response);\n//     if (words7.test(document.querySelector(\"#input\").value)) {\n//       setChats((prevChats)=>{\n//         msg=document.querySelector(\"#input\").value;\n//         return [...prevChats,{message:msg}]\n//       })\n//       getBotMessage.innerText = \"Typing...\";\n//       setTimeout(() => {\n//         getBotMessage.innerText = \"That is good\";\n//         inputRef.value = \"\"; // clear the input\n//       }, 2000);\n//     }\n\n//     let nameAsk = [\n//       \"What's your name|what's your name|What is your name|what is your name\",\n//     ];\n//     let words8 = new RegExp(nameAsk);\n//     if (words8.test(document.querySelector(\"#input\").value)) {\n//       setChats((prevChats)=>{\n//         msg=document.querySelector(\"#input\").value;\n//         return [...prevChats,{message:msg}]\n//       })\n//       getBotMessage.innerText = \"Typing...\";\n//       setTimeout(() => {\n//         getBotMessage.innerText = \"My name is Bot\";\n//         inputRef.value = \"\"; // clear the input\n//       }, 2000);\n//     }\n\n//     let owner = [\n//       \"Who is the owner|who is the owner|Who is the owner of this bot|who is the owner of this bot|Who made you|who made you|Who is your maker|Who made you|who is your maker|who is your owner|Who is your owner\",\n//     ];\n//     let words9 = new RegExp(owner);\n//     if (words9.test(document.querySelector(\"#input\").value)) {\n//       setChats((prevChats)=>{\n//         msg=document.querySelector(\"#input\").value;\n//         return [...prevChats,{message:msg}]\n//       })\n//       getBotMessage.innerText = \"Typing...\";\n//       setTimeout(() => {\n//         getBotMessage.innerText = \"The owner of this bot is Tush\";\n//         inputRef.value = \"\"; // clear the input\n//       }, 2000);\n//     }\n\n//     let owner2 = [\n//       \"Who's Tush|who's Tush|Who is Tush|who is Tush\",\n//     ];\n//     let words10 = new RegExp(owner2);\n//     if (words10.test(document.querySelector(\"#input\").value)) {\n//       setChats((prevChats)=>{\n//         msg=document.querySelector(\"#input\").value;\n//         return [...prevChats,{message:msg}]\n//       })\n//       getBotMessage.innerText = \"Typing...\";\n//       setTimeout(() => {\n//         getBotMessage.innerText =\n//           \"Tush is a programmer based on ReactJS and NodeJS.Tush is Momo.\";\n//         inputRef.value = \"\"; // clear the input\n//       }, 2000);\n//     }\n\n//     let ageAsk = [\n//       \"What's your age|what's your age|What is your age|what is your age|How old are you|how old are you\",\n//     ]; //adding the age-question\n//     let words11 = new RegExp(ageAsk);\n//     if (words11.test(document.querySelector(\"#input\").value)) {\n//       setChats((prevChats)=>{\n//         msg=document.querySelector(\"#input\").value;\n//         return [...prevChats,{message:msg}]\n//       })\n//       // if the input contains some question\n//       getBotMessage.innerText = \"Typing...\";\n//       setTimeout(() => {\n//         getBotMessage.innerText = \"I am 1 year old\";\n//         inputRef.value = \"\"; // clear the input\n//       }, 2000);\n//     }\n//     console.log(Object.values(chats));\n//     // getHumanMessage.innerText = inputRef.value; // display the message\n//   };\n//   return (\n//     <div className=\"App\" onLoad={checkStatus}>\n//       <div className=\"wrapper\">\n//         <div className=\"content\">\n//           <div className=\"header\">\n//             <div className=\"img\">\n//               <img src={image} alt=\"\" />\n//             </div>\n//             <div className=\"right\">\n//               <div className=\"name\">ChatBot</div>\n//               <div className=\"status\">Active</div>\n//             </div>\n//           </div>\n//           <div className=\"main\">\n//             <div className=\"main_content\">\n//               <div className=\"messages\">\n//                 <div\n//                   className=\"bot-message\"\n//                   id=\"message1\"\n//                   ref={botmessage}\n//                 ></div>\n//                 <div\n//                   className=\"human-message\"\n//                   id=\"message2\"\n//                   ref={humanMessage}\n//                 ></div>\n//               </div>\n//             </div>\n//           </div>\n//           <div className=\"bottom\">\n//             <div className=\"btm\">\n//               <div className=\"input\">\n//                 <input\n//                   type=\"text\"\n//                   id=\"input\"\n//                   placeholder=\"Enter your message\"\n//                   ref={input}\n//                 />\n//               </div>\n//               <div className=\"btn\">\n//                 <button onClick={handleInput}>\n//                   <i className=\"fas fa-paper-plane\"></i>Send\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nfunction App() {\n  _s();\n  const date = new Date();\n  const day = date.getDay();\n  const month = date.getMonth();\n  const year = date.getFullYear();\n  const [messages, setMessages] = useState([]);\n  const checkStatus = e => {\n    let isActive = true;\n    if (`${days[day]}, ${months[month]} ${year}` === \"Thursday, Aug 13 2022\") {\n      //if the dateTime is Thursday, 13 Aug 2022, the bot will be inactive\n      isActive = false;\n    }\n    const status = document.querySelector(\".status\");\n    // selecting the status class\n    if (isActive === true) {\n      //if the bot is active\n      status.innerHTML = \"Active\";\n      status.style.color = \"green\";\n    } else {\n      status.innerHTML = \"Not Active\";\n      status.style.color = \"red\";\n    }\n  };\n  const handleInput2 = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    onLoad: checkStatus,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name\",\n              children: \"ChatBot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main_content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages\",\n              children: [messages.map(item => {}), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"100%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    textAlign: \"right\"\n                  },\n                  children: \"Hello\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"input\",\n                placeholder: \"Enter your message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleInput2,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-paper-plane\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 19\n                }, this), \"Send\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["image","useState","useRef","jsxDEV","_jsxDEV","days","months","App","_s","date","Date","day","getDay","month","getMonth","year","getFullYear","messages","setMessages","checkStatus","e","isActive","status","document","querySelector","innerHTML","style","color","handleInput2","className","onLoad","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","item","width","textAlign","type","id","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tripatjot Singh/Desktop/Chatbot/Chatbot/src/App.js"],"sourcesContent":["import \"./App.css\";\r\nimport image from \"./img/bot_image.jpg\";\r\nimport { useState, useRef } from \"react\";\r\n\r\nconst days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\nconst months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\n// function App() {\r\n//   const humanMessage = useRef();\r\n//   const botmessage = useRef();\r\n//   const input = useRef();\r\n//   let msg=\"\";\r\n//   const date = new Date();\r\n//   const hours = date.getHours();\r\n//   const seconds = date.getSeconds();\r\n//   const day = date.getDay();\r\n//   const month = date.getMonth();\r\n//   const year = date.getFullYear();\r\n//   const [chats,setChats]=useState([{}])\r\n//   const days = [\r\n//     \"Sunday\",\r\n//     \"Monday\",\r\n//     \"Tuesday\",\r\n//     \"Wednesday\",\r\n//     \"Thursday\",\r\n//     \"Friday\",\r\n//     \"Saturday\",\r\n//   ];\r\n//   const months = [\r\n//     \"January\",\r\n//     \"February\",\r\n//     \"March\",\r\n//     \"April\",\r\n//     \"May\",\r\n//     \"June\",\r\n//     \"July\",\r\n//     \"August\",\r\n//     \"September\",\r\n//     \"October\",\r\n//     \"November\",\r\n//     \"December\",\r\n//   ];\r\n//   const [time, setTime] = useState(`${hours}:${seconds}`); //using the useState hook to get the data from the local time and set it to the time variable\r\n  // const [dateTime, setDateTime] = useState(\r\n  //   `${days[day]}, ${months[month]} ${year}`\r\n  // ); //using the useState hook to get the data from the local date and set it to the dateTime variable\r\n\r\n  // const checkStatus = (e) => {\r\n  //   let isActive = true;\r\n  //   if (dateTime === \"Thursday, Aug 13 2022\") {\r\n  //     //if the dateTime is Thursday, 13 Aug 2022, the bot will be inactive\r\n  //     isActive = false;\r\n  //   }\r\n  //   const status = document.querySelector(\".status\");\r\n  //   // selecting the status class\r\n  //   if (isActive === true) {\r\n  //     //if the bot is active\r\n  //     status.innerHTML = \"Active\";\r\n  //     status.style.color = \"green\";\r\n  //   } else {\r\n  //     status.innerHTML = \"Not Active\";\r\n  //     status.style.color = \"red\";\r\n  //   }\r\n  // };\r\n\r\n//   const handleInput = () => {\r\n//     const botMessage = document.querySelector(\"#message1\");\r\n//     const userMessage = document.querySelector(\"#message2\");\r\n//     const inputRef = input.current;\r\n//     const getHumanMessage = humanMessage.current;\r\n//     const getBotMessage = botmessage.current;\r\n\r\n//     let badwords = [\"fuck|bad|stupid|useless|bitch|crazy|nonsense\"];\r\n//     let words = new RegExp(badwords);\r\n//     if (words.test(document.querySelector(\"#input\").value)) {\r\n//       // if the input contains bad words\r\n//       setChats((prevChats)=>{\r\n//         msg=document.querySelector(\"#input\").value;\r\n//         return [...prevChats,{message:msg}]\r\n//       })\r\n//       getBotMessage.innerText = \"Typing...\";\r\n//       setTimeout(() => {\r\n//         getBotMessage.innerText = \"Please do not use bad words\"; // display the message\r\n//         inputRef.value = \"\"; // clear the input\r\n//       }, 2000);\r\n//     }\r\n//     let welcome = [\r\n//       \"hi|hello|Hello|hey|sup|yo|wassup|whats up|howdy|greetings|good morning|good afternoon|good evening\",\r\n//     ];\r\n//     let words2 = new RegExp(welcome);\r\n//     if (words2.test(document.querySelector(\"#input\").value)) {\r\n//       const status = document.querySelector(\".status\");\r\n//       // if the input contains welcome words\r\n//       setChats((prevChats)=>{\r\n//         msg=document.querySelector(\"#input\").value;\r\n//         return [...prevChats,{message:msg}]\r\n//       })\r\n//       getBotMessage.innerText = \"Typing...\";\r\n//       setTimeout(() => {\r\n//         getBotMessage.innerText = \"Hello There how are you doing today?\"; // display the message\r\n//         status.innerText = \"Active\";\r\n//         status.style.color = \"green\";\r\n//         inputRef.value = \"\"; // clear the input\r\n//       }, 2000);\r\n//     }\r\n//     let bye = [\"bye|Bye|goodbye|see you later|cya|goodnight|goodbye\"];\r\n//     let words3 = new RegExp(bye);\r\n//     if (words3.test(document.querySelector(\"#input\").value)) {\r\n//       const status = document.querySelector(\".status\");\r\n//       setChats((prevChats)=>{\r\n//         msg=document.querySelector(\"#input\").value;\r\n//         return [...prevChats,{message:msg}]\r\n//       })\r\n//       getBotMessage.innerText = \"Typing...\";\r\n//       setTimeout(() => {\r\n//         getBotMessage.innerText = \"Bye, have a nice day\";\r\n//         inputRef.value = \"\"; // clear the input\r\n//       }, 2000);\r\n//       setTimeout(() => {\r\n//         status.innerText = \"Not active\";\r\n//         status.style.color = \"red\";\r\n//       }, 5000);\r\n//     }\r\n//     let thanks = [\r\n//       \"Thanks|thanks|thank you|thank you very much|Thank you very much\",\r\n//     ];\r\n//     let words4 = new RegExp(thanks);\r\n//     if (words4.test(document.querySelector(\"#input\").value)) {\r\n//       setChats((prevChats)=>{\r\n//         msg=document.querySelector(\"#input\").value;\r\n//         return [...prevChats,{message:msg}]\r\n//       })\r\n//       getBotMessage.innerText = \"Typing...\";\r\n//       setTimeout(() => {\r\n//         getBotMessage.innerText = \"You are welcome\";\r\n//         inputRef.value = \"\"; // clear the input\r\n//       }, 2000);\r\n//     }\r\n//     let how = [\r\n//       \"How are you|how are you doing|how are you doing today|how are you doing today|How are you|how are you\",\r\n//     ];\r\n//     let words5 = new RegExp(how);\r\n//     if (words5.test(document.querySelector(\"#input\").value)) {\r\n//       const status = document.querySelector(\".status\");\r\n//       setChats((prevChats)=>{\r\n//         msg=document.querySelector(\"#input\").value;\r\n//         return [...prevChats,{message:msg}]\r\n//       })\r\n//       getBotMessage.innerText = \"Typing...\";\r\n//       setTimeout(() => {\r\n//         getBotMessage.innerText = \"I am fine, thank you\";\r\n//         status.innerText = \"Active\";\r\n//         status.style.color = \"green\";\r\n//         inputRef.value = \"\"; // clear the input\r\n//       }, 2000);\r\n//     }\r\n//     let good = [\r\n//       \"That's good|Sound nice|that sounds awesome|that sounds great|Great|great|sounds great|that's sounds good|Nice|nice\",\r\n//     ];\r\n//     let words6 = new RegExp(good);\r\n//     if (words6.test(document.querySelector(\"#input\").value)) {\r\n//       setChats((prevChats)=>{\r\n//         msg=document.querySelector(\"#input\").value;\r\n//         return [...prevChats,{message:msg}]\r\n//       })\r\n//       getBotMessage.innerText = \"Typing...\";\r\n//       setTimeout(() => {\r\n//         getBotMessage.innerText = \"hehe\";\r\n//         inputRef.value = \"\"; // clear the input\r\n//       }, 1000);\r\n//     }\r\n\r\n//     let response = [\r\n//       \"I'm fine|I am fine|I am fine today|I am fine today|i'm fine|i'm great|I'm fine|I'm great|I'm good|i'm good|great|Great\",\r\n//     ];\r\n//     let words7 = new RegExp(response);\r\n//     if (words7.test(document.querySelector(\"#input\").value)) {\r\n//       setChats((prevChats)=>{\r\n//         msg=document.querySelector(\"#input\").value;\r\n//         return [...prevChats,{message:msg}]\r\n//       })\r\n//       getBotMessage.innerText = \"Typing...\";\r\n//       setTimeout(() => {\r\n//         getBotMessage.innerText = \"That is good\";\r\n//         inputRef.value = \"\"; // clear the input\r\n//       }, 2000);\r\n//     }\r\n\r\n//     let nameAsk = [\r\n//       \"What's your name|what's your name|What is your name|what is your name\",\r\n//     ];\r\n//     let words8 = new RegExp(nameAsk);\r\n//     if (words8.test(document.querySelector(\"#input\").value)) {\r\n//       setChats((prevChats)=>{\r\n//         msg=document.querySelector(\"#input\").value;\r\n//         return [...prevChats,{message:msg}]\r\n//       })\r\n//       getBotMessage.innerText = \"Typing...\";\r\n//       setTimeout(() => {\r\n//         getBotMessage.innerText = \"My name is Bot\";\r\n//         inputRef.value = \"\"; // clear the input\r\n//       }, 2000);\r\n//     }\r\n\r\n//     let owner = [\r\n//       \"Who is the owner|who is the owner|Who is the owner of this bot|who is the owner of this bot|Who made you|who made you|Who is your maker|Who made you|who is your maker|who is your owner|Who is your owner\",\r\n//     ];\r\n//     let words9 = new RegExp(owner);\r\n//     if (words9.test(document.querySelector(\"#input\").value)) {\r\n//       setChats((prevChats)=>{\r\n//         msg=document.querySelector(\"#input\").value;\r\n//         return [...prevChats,{message:msg}]\r\n//       })\r\n//       getBotMessage.innerText = \"Typing...\";\r\n//       setTimeout(() => {\r\n//         getBotMessage.innerText = \"The owner of this bot is Tush\";\r\n//         inputRef.value = \"\"; // clear the input\r\n//       }, 2000);\r\n//     }\r\n\r\n//     let owner2 = [\r\n//       \"Who's Tush|who's Tush|Who is Tush|who is Tush\",\r\n//     ];\r\n//     let words10 = new RegExp(owner2);\r\n//     if (words10.test(document.querySelector(\"#input\").value)) {\r\n//       setChats((prevChats)=>{\r\n//         msg=document.querySelector(\"#input\").value;\r\n//         return [...prevChats,{message:msg}]\r\n//       })\r\n//       getBotMessage.innerText = \"Typing...\";\r\n//       setTimeout(() => {\r\n//         getBotMessage.innerText =\r\n//           \"Tush is a programmer based on ReactJS and NodeJS.Tush is Momo.\";\r\n//         inputRef.value = \"\"; // clear the input\r\n//       }, 2000);\r\n//     }\r\n\r\n//     let ageAsk = [\r\n//       \"What's your age|what's your age|What is your age|what is your age|How old are you|how old are you\",\r\n//     ]; //adding the age-question\r\n//     let words11 = new RegExp(ageAsk);\r\n//     if (words11.test(document.querySelector(\"#input\").value)) {\r\n//       setChats((prevChats)=>{\r\n//         msg=document.querySelector(\"#input\").value;\r\n//         return [...prevChats,{message:msg}]\r\n//       })\r\n//       // if the input contains some question\r\n//       getBotMessage.innerText = \"Typing...\";\r\n//       setTimeout(() => {\r\n//         getBotMessage.innerText = \"I am 1 year old\";\r\n//         inputRef.value = \"\"; // clear the input\r\n//       }, 2000);\r\n//     }\r\n//     console.log(Object.values(chats));\r\n//     // getHumanMessage.innerText = inputRef.value; // display the message\r\n//   };\r\n//   return (\r\n//     <div className=\"App\" onLoad={checkStatus}>\r\n//       <div className=\"wrapper\">\r\n//         <div className=\"content\">\r\n//           <div className=\"header\">\r\n//             <div className=\"img\">\r\n//               <img src={image} alt=\"\" />\r\n//             </div>\r\n//             <div className=\"right\">\r\n//               <div className=\"name\">ChatBot</div>\r\n//               <div className=\"status\">Active</div>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"main\">\r\n//             <div className=\"main_content\">\r\n//               <div className=\"messages\">\r\n//                 <div\r\n//                   className=\"bot-message\"\r\n//                   id=\"message1\"\r\n//                   ref={botmessage}\r\n//                 ></div>\r\n//                 <div\r\n//                   className=\"human-message\"\r\n//                   id=\"message2\"\r\n//                   ref={humanMessage}\r\n//                 ></div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"bottom\">\r\n//             <div className=\"btm\">\r\n//               <div className=\"input\">\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   id=\"input\"\r\n//                   placeholder=\"Enter your message\"\r\n//                   ref={input}\r\n//                 />\r\n//               </div>\r\n//               <div className=\"btn\">\r\n//                 <button onClick={handleInput}>\r\n//                   <i className=\"fas fa-paper-plane\"></i>Send\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nfunction App() {\r\n\r\n  const date = new Date();\r\n  const day = date.getDay();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const checkStatus = (e) => {\r\n    let isActive = true;\r\n    if (`${days[day]}, ${months[month]} ${year}` === \"Thursday, Aug 13 2022\") {\r\n      //if the dateTime is Thursday, 13 Aug 2022, the bot will be inactive\r\n      isActive = false;\r\n    }\r\n    const status = document.querySelector(\".status\");\r\n    // selecting the status class\r\n    if (isActive === true) {\r\n      //if the bot is active\r\n      status.innerHTML = \"Active\";\r\n      status.style.color = \"green\";\r\n    } else {\r\n      status.innerHTML = \"Not Active\";\r\n      status.style.color = \"red\";\r\n    }\r\n  };\r\n\r\n  const handleInput2 = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\" onLoad={checkStatus}>\r\n      <div className=\"wrapper\">\r\n        <div className=\"content\">\r\n          <div className=\"header\">\r\n            <div className=\"img\">\r\n              <img src={image} alt=\"\" />\r\n            </div>\r\n            <div className=\"right\">\r\n              <div className=\"name\">ChatBot</div>\r\n              <div className=\"status\">Active</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"main\">\r\n            <div className=\"main_content\">\r\n              <div className=\"messages\">\r\n                {\r\n                  messages.map((item) => {\r\n                    \r\n                  })\r\n                }\r\n                <div style={{ width: \"100%\" }}>\r\n                  <p style={{ textAlign: \"right\" }}>Hello</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bottom\">\r\n            <div className=\"btm\">\r\n              <div className=\"input\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"input\"\r\n                  placeholder=\"Enter your message\"\r\n                />\r\n              </div>\r\n              <div className=\"btn\">\r\n                <button onClick={handleInput2}>\r\n                  <i className=\"fas fa-paper-plane\"></i>Send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,qBAAqB;AACvC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,IAAI,GAAG,CACX,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,WAAW,EACX,UAAU,EACV,QAAQ,EACR,UAAU,CACX;AACD,MAAMC,MAAM,GAAG,CACb,SAAS,EACT,UAAU,EACV,OAAO,EACP,OAAO,EACP,KAAK,EACL,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,CACX;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,IAAI,GAAG,IAAIC,IAAI,EAAE;EACvB,MAAMC,GAAG,GAAGF,IAAI,CAACG,MAAM,EAAE;EACzB,MAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAQ,EAAE;EAC7B,MAAMC,IAAI,GAAGN,IAAI,CAACO,WAAW,EAAE;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMkB,WAAW,GAAIC,CAAC,IAAK;IACzB,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAK,GAAEhB,IAAI,CAACM,GAAG,CAAE,KAAIL,MAAM,CAACO,KAAK,CAAE,IAAGE,IAAK,EAAC,KAAK,uBAAuB,EAAE;MACxE;MACAM,QAAQ,GAAG,KAAK;IAClB;IACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;IAChD;IACA,IAAIH,QAAQ,KAAK,IAAI,EAAE;MACrB;MACAC,MAAM,CAAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}